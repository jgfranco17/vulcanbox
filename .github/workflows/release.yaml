name: Production Release

on:
  workflow_dispatch:
  push:
    paths:
      - "pyproject.toml"

jobs:
  publish-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.4"

      - name: Install poetry
        shell: bash
        run: |
          pip install --upgrade pip
          pip install poetry==1.8.3

      - name: Install dependencies
        run: |
          poetry install

      - name: Install Just
        uses: extractions/setup-just@v2

      - name: Run tests
        run: |
          just pytest -vv

      - name: Build Python package
        run: |
          poetry build

      - name: Extract version from TOML
        id: extract-version
        run: |
          ./compare_versions.sh
          VERSION=$(grep -oP '^version = "\K[^"]+' pyproject.toml)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Install Github CLI
        run: |
          sudo apt-get install gh

      - name: Fetch release notes
        id: read-notes
        run: |
          NOTES=$(cat .github/release/${{ env.VERSION }}.md | base64)
          echo "ENCODED_NOTES=$NOTES" >> $GITHUB_ENV

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
          VERSION: ${{ env.VERSION }}
        run: |
          NOTES=$(echo "${{ env.ENCODED_NOTES }}" | base64 --decode)
          gh release create "${{ env.VERSION }}" --title "${{ env.VERSION }}" --notes "${{ env.NOTES }}" dist/*

      - name: Post release notes to summary
        if: success()
        run: |
          echo '```markdown' >> $GITHUB_STEP_SUMMARY
          cat .github/release/${{ env.VERSION }}.md >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
